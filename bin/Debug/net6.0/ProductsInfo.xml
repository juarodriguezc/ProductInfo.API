<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProductsInfo</name>
    </assembly>
    <members>
        <member name="T:ProductsInfo.Controllers.ProductsController">
            <summary>
            Products Controller
            </summary>
        </member>
        <member name="M:ProductsInfo.Controllers.ProductsController.#ctor(ProductsInfo.Services.IProductsInfoRepository,AutoMapper.IMapper)">
            <summary>
            Products Controller Constructor
            </summary>
            <param name="productsInfoRepository">Dependency Injection of The Repository</param>
            <param name="mapper">Dependency Injection of the Mapper for the results</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:ProductsInfo.Controllers.ProductsController.GetProducts(System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Get all products and (optional) filter by description
            </summary>
            <param name="description">The description of the product to filter</param>
            <param name="pageNumber">Number of page to get</param>
            <param name="pageSize">Size of the page to get</param>
            <returns>An ActionResult with the Products</returns>
        </member>
        <member name="M:ProductsInfo.Controllers.ProductsController.GetProduct(System.Int32)">
            <summary>
            Get product by id
            </summary>
            <param name="id">Id of product to search</param>
            <returns>An ActionResult with the Product</returns>
        </member>
        <member name="M:ProductsInfo.Controllers.ProductsController.CreateProduct(ProductsInfo.Models.ProductForCreationDto)">
            <summary>
            Post a new Product
            </summary>
            <param name="product">Product to be created</param>
            <returns>An ActionResult with the product created</returns>
        </member>
        <member name="M:ProductsInfo.Controllers.ProductsController.UpdateProduct(System.Int32,ProductsInfo.Models.ProductForUpdateDto)">
            <summary>
            Put a Product for full Update
            </summary>
            <param name="productId">Id of the product to be updated</param>
            <param name="product">The new product</param>
            <returns>An ActionResult</returns>
        </member>
        <member name="M:ProductsInfo.Controllers.ProductsController.PartiallyUpdateProduct(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ProductsInfo.Models.ProductForUpdateDto})">
            <summary>
            Patch a Product for Partial Update
            </summary>
            <param name="productId">The Id of the product to be updated</param>
            <param name="patchDocument">Patch Document with the update operations</param>
            <returns>An ActionResult</returns>
        </member>
        <member name="M:ProductsInfo.Controllers.ProductsController.DeleteProduct(System.Int32)">
            <summary>
            Delete a Product
            </summary>
            <param name="productId">The Id of the product to be deleted</param>
            <returns>An ActionResult</returns>
        </member>
        <member name="T:ProductsInfo.DbContexts.ProductInfoContext">
            <summary>
            DbContext for the ProductInfoAPI
            </summary>
        </member>
        <member name="P:ProductsInfo.DbContexts.ProductInfoContext.Products">
            <summary>
            DBSet for the Products
            </summary>
        </member>
        <member name="M:ProductsInfo.DbContexts.ProductInfoContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{ProductsInfo.DbContexts.ProductInfoContext})">
            <summary>
            DbContext Constructor with the DB options
            </summary>
            <param name="options">Options of the db</param>
        </member>
        <member name="M:ProductsInfo.DbContexts.ProductInfoContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            OnModelCreating Function to Seed the db
            </summary>
            <param name="modelBuilder">ModelBuilder</param>
        </member>
        <member name="T:ProductsInfo.Entities.Product">
            <summary>
            Ebtity Product
            </summary>
        </member>
        <member name="P:ProductsInfo.Entities.Product.Id">
            <summary>
            Ptoduct Id - Autogenerated
            </summary>
        </member>
        <member name="P:ProductsInfo.Entities.Product.Description">
            <summary>
            Product description
            </summary>
        </member>
        <member name="P:ProductsInfo.Entities.Product.ProductType">
            <summary>
            Product Type
            </summary>
        </member>
        <member name="P:ProductsInfo.Entities.Product.Price">
            <summary>
            Price of the product
            </summary>
        </member>
        <member name="P:ProductsInfo.Entities.Product.PurchaseDate">
            <summary>
            Purchase date of the product
            </summary>
        </member>
        <member name="P:ProductsInfo.Entities.Product.State">
            <summary>
            Product State
            </summary>
        </member>
        <member name="T:ProductsInfo.Entities.ProductType">
            <summary>
            Enum for the product type
            </summary>
        </member>
        <member name="F:ProductsInfo.Entities.ProductType.Bienes">
            <summary>
            Bienes
            </summary>
        </member>
        <member name="F:ProductsInfo.Entities.ProductType.Vehiculos">
            <summary>
            Vehiculos
            </summary>
        </member>
        <member name="F:ProductsInfo.Entities.ProductType.Terrenos">
            <summary>
            Terrenos
            </summary>
        </member>
        <member name="F:ProductsInfo.Entities.ProductType.Apartamentos">
            <summary>
            Apartamentos
            </summary>
        </member>
        <member name="T:ProductsInfo.Entities.ProductState">
            <summary>
            Enum for the product state
            </summary>
        </member>
        <member name="F:ProductsInfo.Entities.ProductState.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:ProductsInfo.Entities.ProductState.Inactive">
            <summary>
            Inactive
            </summary>
        </member>
        <member name="T:ProductsInfo.Migrations.ProductInfoInitialMigration">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.ProductInfoInitialMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.ProductInfoInitialMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.ProductInfoInitialMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ProductsInfo.Migrations.ProductInfoAddLengthProuctType">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.ProductInfoAddLengthProuctType.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.ProductInfoAddLengthProuctType.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.ProductInfoAddLengthProuctType.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ProductsInfo.Migrations.DataSeed">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.DataSeed.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.DataSeed.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.DataSeed.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ProductsInfo.Migrations.enum_types">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.enum_types.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.enum_types.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.enum_types.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ProductsInfo.Migrations.updatetypes">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.updatetypes.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.updatetypes.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.updatetypes.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ProductsInfo.Migrations.updatenamedate">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.updatenamedate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.updatenamedate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.updatenamedate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ProductsInfo.Migrations.updatedateutc">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.updatedateutc.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.updatedateutc.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.updatedateutc.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ProductsInfo.Migrations.data">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.data.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.data.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ProductsInfo.Migrations.data.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ProductsInfo.Models.ProductDto">
            <summary>
            DTO with all the attributes of the Product
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductDto.Id">
            <summary>
            Product Id
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductDto.Description">
            <summary>
            Product Description
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductDto.ProductType">
            <summary>
            Product Type
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductDto.Price">
            <summary>
            Price of the Product
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductDto.PurchaseDate">
            <summary>
            Purchase Date, it is a DateTimeOffset
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductDto.State">
            <summary>
            Product State
            </summary>
        </member>
        <member name="T:ProductsInfo.Models.ProductForCreationDto">
            <summary>
            A DTO for product Creation, it does not include the ID
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForCreationDto.Description">
            <summary>
            Product Description
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForCreationDto.ProductType">
            <summary>
            Product Type
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForCreationDto.Price">
            <summary>
            Product Price
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForCreationDto.PurchaseDate">
            <summary>
            Purchase date of the product
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForCreationDto.State">
            <summary>
            Product State
            </summary>
        </member>
        <member name="T:ProductsInfo.Models.ProductForUpdateDto">
            <summary>
            DTO for Product Update
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForUpdateDto.Description">
            <summary>
            Description of the product
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForUpdateDto.ProductType">
            <summary>
            Product Type
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForUpdateDto.Price">
            <summary>
            Product price
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForUpdateDto.PurchaseDate">
            <summary>
            Purchase date of the product
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductForUpdateDto.State">
            <summary>
            Product State
            </summary>
        </member>
        <member name="T:ProductsInfo.Models.ProductStateDto">
            <summary>
            DTO for prpduct state
            </summary>
        </member>
        <member name="F:ProductsInfo.Models.ProductStateDto.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:ProductsInfo.Models.ProductStateDto.Inactive">
            <summary>
            Inactive
            </summary>
        </member>
        <member name="T:ProductsInfo.Models.ProductTypeDto">
            <summary>
            A DTO for the Product Types
            </summary>
        </member>
        <member name="F:ProductsInfo.Models.ProductTypeDto.Bienes">
            <summary>
            0 - Bienes
            </summary>
        </member>
        <member name="F:ProductsInfo.Models.ProductTypeDto.Vehiculos">
            <summary>
            1 - Vehiculos
            </summary>
        </member>
        <member name="F:ProductsInfo.Models.ProductTypeDto.Terrenos">
            <summary>
            2 - Terrenos
            </summary>
        </member>
        <member name="F:ProductsInfo.Models.ProductTypeDto.Apartamentos">
            <summary>
            3 - Apartamentos
            </summary>
        </member>
        <member name="T:ProductsInfo.Models.ProductWithoutPricePurchaseDateDto">
            <summary>
            A DTO for a Product without Price and PurchaseDate
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductWithoutPricePurchaseDateDto.Id">
            <summary>
            The Product Id
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductWithoutPricePurchaseDateDto.Description">
            <summary>
            The Description of the Product
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductWithoutPricePurchaseDateDto.ProductType">
            <summary>
            Type of Product
            </summary>
        </member>
        <member name="P:ProductsInfo.Models.ProductWithoutPricePurchaseDateDto.State">
            <summary>
            State of Product
            </summary>
        </member>
        <member name="T:ProductsInfo.Profiles.ProductProfile">
            <summary>
            Profile class to Automap the DTO and Entities
            </summary>
        </member>
        <member name="M:ProductsInfo.Profiles.ProductProfile.#ctor">
            <summary>
            Constructor with the Maps
            </summary>
        </member>
        <member name="T:ProductsInfo.Services.IProductsInfoRepository">
            <summary>
            Interface for the Products Repository
            </summary>
        </member>
        <member name="M:ProductsInfo.Services.IProductsInfoRepository.GetProductsAsync">
            <summary>
            Method to Get all Products
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProductsInfo.Services.IProductsInfoRepository.GetProductsAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Method to Get All Products using filters and Pagination
            </summary>
            <param name="description">Description filter</param>
            <param name="pageNumber">Page Number</param>
            <param name="pageSize">Size of the Page</param>
            <returns></returns>
        </member>
        <member name="M:ProductsInfo.Services.IProductsInfoRepository.GetProductAsync(System.Int32)">
            <summary>
            Method to Get a Product by Id
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:ProductsInfo.Services.IProductsInfoRepository.AddProduct(ProductsInfo.Entities.Product)">
            <summary>
            Method to Add a Product
            </summary>
            <param name="product"></param>
        </member>
        <member name="M:ProductsInfo.Services.IProductsInfoRepository.DeleteProduct(ProductsInfo.Entities.Product)">
            <summary>
            Method to Delete a Product
            </summary>
            <param name="product"></param>
        </member>
        <member name="M:ProductsInfo.Services.IProductsInfoRepository.SaveChangesAsync">
            <summary>
            Method to Save changes in DB, required for Write Methods
            </summary>
            <returns></returns>
        </member>
        <member name="T:ProductsInfo.Services.PaginationMetadata">
            <summary>
            Class to Store the Pagination Metadata
            </summary>
        </member>
        <member name="P:ProductsInfo.Services.PaginationMetadata.TotalItemCount">
            <summary>
            Total Items in the result
            </summary>
        </member>
        <member name="P:ProductsInfo.Services.PaginationMetadata.TotalPageCount">
            <summary>
            Total Pages
            </summary>
        </member>
        <member name="P:ProductsInfo.Services.PaginationMetadata.PageSize">
            <summary>
            Size of the pages
            </summary>
        </member>
        <member name="P:ProductsInfo.Services.PaginationMetadata.CurrentPage">
            <summary>
            Current Page
            </summary>
        </member>
        <member name="M:ProductsInfo.Services.PaginationMetadata.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Class Constructor
            </summary>
            <param name="totalItemCount">Total Pages</param>
            <param name="pageSize">Page size</param>
            <param name="currentPage">Current Page</param>
        </member>
        <member name="T:ProductsInfo.Services.ProductInfoRepository">
            <summary>
            Class that implements the interface for ProductsRepository
            </summary>
        </member>
        <member name="M:ProductsInfo.Services.ProductInfoRepository.#ctor(ProductsInfo.DbContexts.ProductInfoContext)">
            <summary>
            Class constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ProductsInfo.Services.ProductInfoRepository.GetProductAsync(System.Int32)">
            <summary>
            Method to Get a Product by Id
            </summary>
            <param name="productId">Product Id</param>
            <returns></returns>
        </member>
        <member name="M:ProductsInfo.Services.ProductInfoRepository.GetProductsAsync">
            <summary>
            Method to Get All Products
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProductsInfo.Services.ProductInfoRepository.GetProductsAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Method to Get Products with filters and Pagination
            </summary>
            <param name="description">Product description filter</param>
            <param name="pageNumber">Page Number</param>
            <param name="pageSize">Size of each Page</param>
            <returns></returns>
        </member>
        <member name="M:ProductsInfo.Services.ProductInfoRepository.AddProduct(ProductsInfo.Entities.Product)">
            <summary>
            Method to Add a product
            </summary>
            <param name="product"></param>
        </member>
        <member name="M:ProductsInfo.Services.ProductInfoRepository.DeleteProduct(ProductsInfo.Entities.Product)">
            <summary>
            Method to Delete a Product
            </summary>
            <param name="product"></param>
        </member>
        <member name="M:ProductsInfo.Services.ProductInfoRepository.SaveChangesAsync">
            <summary>
            Method to Save Changes in DB
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
